
MAJ TABLE RECHERCHE 

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
///////////////////           JCODE NOT USE             ////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

SELECT CBB CHANGE STATS

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == ItemEvent.SELECTED) {
            for (Chien c : TabloChien) {
                if (c.getNom_Chien() == this.CBBNAME.getSelectedItem()) {
                    Affichage_CHIEN(c);
                    this.Txt_Sortie.setText(c.getDate_Sortie_Chien() == null ? "" : c.getDate_Sortie_Chien().toString());
                    break;
                }
            }
        }
    }

--------------------------------------------------------------------------------
REMPLIR COMBO

    public void RemplirComboCHIEN() throws SQLException {
        TabloChien = daoChien.FindALL();
        this.CBBNAME.removeAllItems();
        for (Chien elt : TabloChien) {
            this.CBBNAME.addItem(elt.getNom_Chien());
        }
    }

LISTENER
        

CBBNAME.addItemListener(this);

--------------------------------------------------------------------------------

    /*    private void Affichage_optionPane_Chien(Chien c) {
    
    this.Txt_ID.setText(String.valueOf(c.getID_Chien()));
    this.Txt_Nom.setText(String.valueOf(c.getNom_Chien()));
    this.Txt_Nee.setText(c.getDate_Chien().format(dtf));
    this.CBB_Sexe.setSelectedItem(c.getSex_Chien());
    this.CBB_Race_Chien.setSelectedItem(c.getRace_Chien());
    this.CHECK_Steril.setText(String.valueOf(c.isSteril_Chien()));
    this.CHECK_Steril.setSelected(c.isSteril_Chien());
    this.Txt_Entre.setText(c.getDate_Entre_Chien().format(dtf));
    LocalDate dateSortie = c.getDate_Sortie_Chien();
    if (dateSortie != null) {
    this.Txt_Sortie.setText(c.getDate_Sortie_Chien().format(dtf));
    } else {
    this.Txt_Sortie.setText("");
    }
    this.Txt_Refuge.setText(String.valueOf(c.getID_Refuge_Chien()));
    this.Txt_Proprio.setText(String.valueOf(c.getID_Proprio_Chien()));
    CheckEarly();
    JOptionPane.showMessageDialog(null,
    "Information : \n  " + c);
    
    }*/


    /*    private void Affichage_optionPane_Refuge(Refuge r) {
    this.Txt_ID_refuge.setText(String.valueOf(r.getId()));
    this.Txt_Nom_Refuge.setText(String.valueOf(r.getNom()));
    this.Txt_Place_Refuge.setText(String.valueOf(r.getPlace()));
    this.Txt_Adresse_Refuge.setText(r.getAdresse());
    this.Txt_Num_Tel.setText(r.getNumTel());
    
    JOptionPane.showMessageDialog(null,
    "Information : \n  " + r);
    }*/


    /*    private void Affichage_optionPane_Proprio(Proprio p) {
    this.Txt_ID_Pro.setText(String.valueOf(p.getIdProprio()));
    this.Txt_Nom_Pro.setText(String.valueOf(p.getNomProprio()));
    this.Txt_Adr_Pro.setText(String.valueOf(p.getAdresseProprio()));
    
    JOptionPane.showMessageDialog(null,
    "Information : \n  " + p);
    }*/


























